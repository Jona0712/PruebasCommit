{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n\n<ul class=\"nav grey lighten-4 py-4\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link disabled\" href=\"#!\">Organización de Lenguajes y \n      Compiladores 2</a>\n</li>\n\n<li class=\"nav-item dropdown\" dropdown  >\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n    Funcionalidades<span class=\"caret\"></span></a>\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Crear archivos</a>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Abrir archivos</a>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Guardar el archivo</a>\n    <div class=\"divider dropdown-divider\"></div>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Eliminar pestaña</a>\n  </div>\n</li>\n\n<li class=\"nav-item dropdown\" dropdown  >\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n    Reporte de Errores<span class=\"caret\"></span></a>\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores léxico</a>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores sintáctico</a>\n    <a class=\"dropdown-item waves-light\" (click)=\"openPage('TablaSim',2)\"   mdbWavesEffect href=\"#\">Errores el semántico</a>\n    </div>\n</li>\n\n  <li class=\"nav-item\">\n    <button mdbBtn (click)=\"ejecutar()\" type=\"button\" color=\"success\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Ejecutar</button>\n  </li>\n  <li class=\"nav-item\">\n  <button mdbBtn (click)=\"recorrer()\" type=\"button\" color=\"info\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Generar Árbol AST</button>\n</li>\n<li class=\"nav-item\">\n  <button mdbBtn (click)=\"imprimirTabla()\" type=\"button\" color=\"info\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Reporte Gramatical</button>\n</li>\n<li class=\"nav-item\">\n<button mdbBtn   (click)=\"openPage('TablaSim',1)\"  type=\"button\" color=\"default\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Tabla de Símbolos</button>\n</li>\n</ul>\n<br>\n<div class=\"container-fluid\">\n<mdb-card>\n  \n  <mdb-card-body>\n    <mdb-card-title>\n      <h5>XPAHT</h5>\n    </mdb-card-title>\n    <div class=\"col\">\n      <ngx-codemirror\n      [(ngModel)]=\"entradaxpath\"\n      [options]=\"{\n      lineNumbers: true,\n      theme: 'material',\n      mode: 'markdown'\n      }\"\n    ></ngx-codemirror>\n    </div>\n  </mdb-card-body>\n</mdb-card>\n<br>\n</div>\n<div class=\"container-fluid\">\n<div class=\"row\">\n  <div class=\"col-sm-6 mb-3 mb-md-0\">\n    <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>XML</h5>\n        </mdb-card-title>\n        <div class=\"col\">\n          <ngx-codemirror\n          [(ngModel)]=\"entradaxml\"\n          [options]=\"{\n          lineNumbers: true,\n          theme: 'material',\n          mode: 'markdown'\n          }\"\n        ></ngx-codemirror>\n        </div>\n      </mdb-card-body>\n    </mdb-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>Consola</h5>\n        </mdb-card-title>\n        <div class=\"col\">\n          <ngx-codemirror\n          [(ngModel)]=\"consola\"\n          [options]=\"{\n          lineNumbers: true,\n          theme: 'material',\n          mode: 'markdown'\n          }\"\n        ></ngx-codemirror>\n        </div>\n      </mdb-card-body>\n    </mdb-card>\n  </div>\n</div>\n\n<br>\n  <div id=\"TablaSim\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\n    <table mdbTable id= \"tablasimbols\" style=\"width:100%\" bordered=\"true\">\n    \n    </table>\n  </div>\n</div>\n\n<br>\n  <div id=\"ast\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\n    <div class=\"overflow-auto\" id=\"graph\" style=\"text-align: center;\"></div>\n  </div>\n\n \n\n  <div class=\"container-fluid\">\n    <mdb-card>\n      \n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>Arbol</h5>\n        </mdb-card-title>\n        <div id=\"app\"></div>\n      </mdb-card-body>\n    </mdb-card>\n    <br>\n    </div>\n        \n    <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>REPORTE GRAMATICAL</h5>\n        </mdb-card-title>\n        <div class=\"row\">\n          <div class=\"col-sm-6 mb-3 mb-md-0\">\n            <mdb-card-title>\n              <h5>XML</h5>\n            </mdb-card-title>\n            <ngx-codemirror\n            [(ngModel)]=\"reporteGramatical\"\n            [options]=\"{\n            lineNumbers: true,\n            theme: 'material',\n            mode: 'markdown'\n            }\"\n          ></ngx-codemirror>\n          </div>\n          <div class=\"col-sm-6\">\n            <mdb-card-title>\n              <h5>XPATH</h5>\n            </mdb-card-title>\n            <ngx-codemirror\n            [(ngModel)]=\"xpathRG\"\n            [options]=\"{\n            lineNumbers: true,\n            theme: 'material',\n            mode: 'markdown'\n            }\"\n          ></ngx-codemirror>\n          </div>\n        </div>\n      </mdb-card-body>\n    </mdb-card>\n\n    \n<script type=\"text/javascript\"></script>","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  entradaxpath : string  = \"\";\n  consola : string = \"\";\n  entradaxml:string=\"\";\n  htmlts: string =\"\";\n  htmlerrores: string =\"\";\n  reporteGramatical: string = \"\";\n  xpathRG: string = \"\";\n\n\n  recorrer(): void{\n    \n  }\n\n  ejecutar():void {\n   \n    \n  }\n  imprimirTabla() {\n    \n    \n    \n      \n  }\n\n  openPage(pageName,valor) {\n    \n  }\n\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule } from '@angular/forms';\n\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    CodemirrorModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}