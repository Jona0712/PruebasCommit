{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","entradaxpath","consola","entradaxml","htmlts","htmlerrores","reporteGramatical","xpathRG","pageName","valor","ejecutar","recorrer","imprimirTabla","openPage","AppModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n\n<ul class=\"nav grey lighten-4 py-4\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link disabled\" href=\"#!\">Organización de Lenguajes y \n      Compiladores 2</a>\n</li>\n\n<li class=\"nav-item dropdown\" dropdown  >\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n    Funcionalidades<span class=\"caret\"></span></a>\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Crear archivos</a>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Abrir archivos</a>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Guardar el archivo</a>\n    <div class=\"divider dropdown-divider\"></div>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Eliminar pestaña</a>\n  </div>\n</li>\n\n<li class=\"nav-item dropdown\" dropdown  >\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\n    Reporte de Errores<span class=\"caret\"></span></a>\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores léxico</a>\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores sintáctico</a>\n    <a class=\"dropdown-item waves-light\" (click)=\"openPage('TablaSim',2)\"   mdbWavesEffect href=\"#\">Errores el semántico</a>\n    </div>\n</li>\n\n  <li class=\"nav-item\">\n    <button mdbBtn (click)=\"ejecutar()\" type=\"button\" color=\"success\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Ejecutar</button>\n  </li>\n  <li class=\"nav-item\">\n  <button mdbBtn (click)=\"recorrer()\" type=\"button\" color=\"info\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Generar Árbol AST</button>\n</li>\n<li class=\"nav-item\">\n  <button mdbBtn (click)=\"imprimirTabla()\" type=\"button\" color=\"info\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Reporte Gramatical</button>\n</li>\n<li class=\"nav-item\">\n<button mdbBtn   (click)=\"openPage('TablaSim',1)\"  type=\"button\" color=\"default\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Tabla de Símbolos</button>\n</li>\n</ul>\n<br>\n<div class=\"container-fluid\">\n<mdb-card>\n  \n  <mdb-card-body>\n    <mdb-card-title>\n      <h5>XPAHT</h5>\n    </mdb-card-title>\n    <div class=\"col\">\n      <ngx-codemirror\n      [(ngModel)]=\"entradaxpath\"\n      [options]=\"{\n      lineNumbers: true,\n      theme: 'material',\n      mode: 'markdown'\n      }\"\n    ></ngx-codemirror>\n    </div>\n  </mdb-card-body>\n</mdb-card>\n<br>\n</div>\n<div class=\"container-fluid\">\n<div class=\"row\">\n  <div class=\"col-sm-6 mb-3 mb-md-0\">\n    <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>XML</h5>\n        </mdb-card-title>\n        <div class=\"col\">\n          <ngx-codemirror\n          [(ngModel)]=\"entradaxml\"\n          [options]=\"{\n          lineNumbers: true,\n          theme: 'material',\n          mode: 'markdown'\n          }\"\n        ></ngx-codemirror>\n        </div>\n      </mdb-card-body>\n    </mdb-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>Consola</h5>\n        </mdb-card-title>\n        <div class=\"col\">\n          <ngx-codemirror\n          [(ngModel)]=\"consola\"\n          [options]=\"{\n          lineNumbers: true,\n          theme: 'material',\n          mode: 'markdown'\n          }\"\n        ></ngx-codemirror>\n        </div>\n      </mdb-card-body>\n    </mdb-card>\n  </div>\n</div>\n\n<br>\n  <div id=\"TablaSim\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\n    <table mdbTable id= \"tablasimbols\" style=\"width:100%\" bordered=\"true\">\n    \n    </table>\n  </div>\n</div>\n\n<br>\n  <div id=\"ast\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\n    <div class=\"overflow-auto\" id=\"graph\" style=\"text-align: center;\"></div>\n  </div>\n\n \n\n  <div class=\"container-fluid\">\n    <mdb-card>\n      \n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>Arbol</h5>\n        </mdb-card-title>\n        <div id=\"app\"></div>\n      </mdb-card-body>\n    </mdb-card>\n    <br>\n    </div>\n        \n    <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title>\n          <h5>REPORTE GRAMATICAL</h5>\n        </mdb-card-title>\n        <div class=\"row\">\n          <div class=\"col-sm-6 mb-3 mb-md-0\">\n            <mdb-card-title>\n              <h5>XML</h5>\n            </mdb-card-title>\n            <ngx-codemirror\n            [(ngModel)]=\"reporteGramatical\"\n            [options]=\"{\n            lineNumbers: true,\n            theme: 'material',\n            mode: 'markdown'\n            }\"\n          ></ngx-codemirror>\n          </div>\n          <div class=\"col-sm-6\">\n            <mdb-card-title>\n              <h5>XPATH</h5>\n            </mdb-card-title>\n            <ngx-codemirror\n            [(ngModel)]=\"xpathRG\"\n            [options]=\"{\n            lineNumbers: true,\n            theme: 'material',\n            mode: 'markdown'\n            }\"\n          ></ngx-codemirror>\n          </div>\n        </div>\n      </mdb-card-body>\n    </mdb-card>\n\n    \n<script type=\"text/javascript\"></script>","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n  entradaxpath : string  = \"\";\n  consola : string = \"\";\n  entradaxml:string=\"\";\n  htmlts: string =\"\";\n  htmlerrores: string =\"\";\n  reporteGramatical: string = \"\";\n  xpathRG: string = \"\";\n\n\n  recorrer(): void{\n    \n  }\n\n  ejecutar():void {\n   \n    \n  }\n  imprimirTabla() {\n    \n    \n    \n      \n  }\n\n  openPage(pageName,valor) {\n    \n  }\n\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FormsModule } from '@angular/forms';\n\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MDBBootstrapModule.forRoot(),\n    FormsModule,\n    CodemirrorModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/markdown/markdown';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}