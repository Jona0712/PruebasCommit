{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","entradaxpath","consola","entradaxml","htmlts","htmlerrores","reporteGramatical","xpathRG","pageName","valor","ejecutar","recorrer","imprimirTabla","openPage","AppModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\n\r\n<ul class=\"nav grey lighten-4 py-4\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link disabled\" href=\"#!\">Organización de Lenguajes y \r\n      Compiladores 2</a>\r\n</li>\r\n\r\n<li class=\"nav-item dropdown\" dropdown  >\r\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n    Funcionalidades<span class=\"caret\"></span></a>\r\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Crear archivos</a>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Abrir archivos</a>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Guardar el archivo</a>\r\n    <div class=\"divider dropdown-divider\"></div>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Eliminar pestaña</a>\r\n  </div>\r\n</li>\r\n\r\n<li class=\"nav-item dropdown\" dropdown  >\r\n  <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\" mdbWavesEffect>\r\n    Reporte de Errores<span class=\"caret\"></span></a>\r\n  <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores léxico</a>\r\n    <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">Errores sintáctico</a>\r\n    <a class=\"dropdown-item waves-light\" (click)=\"openPage('TablaSim',2)\"   mdbWavesEffect href=\"#\">Errores el semántico</a>\r\n    </div>\r\n</li>\r\n\r\n  <li class=\"nav-item\">\r\n    <button mdbBtn (click)=\"ejecutar()\" type=\"button\" color=\"success\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Ejecutar</button>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n  <button mdbBtn (click)=\"recorrer()\" type=\"button\" color=\"info\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Generar Árbol AST</button>\r\n</li>\r\n<li class=\"nav-item\">\r\n  <button mdbBtn (click)=\"imprimirTabla()\" type=\"button\" color=\"info\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Reporte Gramatical</button>\r\n</li>\r\n<li class=\"nav-item\">\r\n<button mdbBtn   (click)=\"openPage('TablaSim',1)\"  type=\"button\" color=\"default\" rounded=\"true\" outline=\"true\" mdbWavesEffect>Tabla de Símbolos</button>\r\n</li>\r\n</ul>\r\n<br>\r\n<div class=\"container-fluid\">\r\n<mdb-card>\r\n  \r\n  <mdb-card-body>\r\n    <mdb-card-title>\r\n      <h5>XPAHT</h5>\r\n    </mdb-card-title>\r\n    <div class=\"col\">\r\n      <ngx-codemirror\r\n      [(ngModel)]=\"entradaxpath\"\r\n      [options]=\"{\r\n      lineNumbers: true,\r\n      theme: 'material',\r\n      mode: 'markdown'\r\n      }\"\r\n    ></ngx-codemirror>\r\n    </div>\r\n  </mdb-card-body>\r\n</mdb-card>\r\n<br>\r\n</div>\r\n<div class=\"container-fluid\">\r\n<div class=\"row\">\r\n  <div class=\"col-sm-6 mb-3 mb-md-0\">\r\n    <mdb-card>\r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>XML</h5>\r\n        </mdb-card-title>\r\n        <div class=\"col\">\r\n          <ngx-codemirror\r\n          [(ngModel)]=\"entradaxml\"\r\n          [options]=\"{\r\n          lineNumbers: true,\r\n          theme: 'material',\r\n          mode: 'markdown'\r\n          }\"\r\n        ></ngx-codemirror>\r\n        </div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n  </div>\r\n  <div class=\"col-sm-6\">\r\n    <mdb-card>\r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>Consola</h5>\r\n        </mdb-card-title>\r\n        <div class=\"col\">\r\n          <ngx-codemirror\r\n          [(ngModel)]=\"consola\"\r\n          [options]=\"{\r\n          lineNumbers: true,\r\n          theme: 'material',\r\n          mode: 'markdown'\r\n          }\"\r\n        ></ngx-codemirror>\r\n        </div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n  </div>\r\n</div>\r\n\r\n<br>\r\n  <div id=\"TablaSim\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\r\n    <table mdbTable id= \"tablasimbols\" style=\"width:100%\" bordered=\"true\">\r\n    \r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n<br>\r\n  <div id=\"ast\" class=\"tabcontent\" style=\"background-color: #1b1d1c;\">\r\n    <div class=\"overflow-auto\" id=\"graph\" style=\"text-align: center;\"></div>\r\n  </div>\r\n\r\n \r\n\r\n  <div class=\"container-fluid\">\r\n    <mdb-card>\r\n      \r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>Arbol</h5>\r\n        </mdb-card-title>\r\n        <div id=\"app\"></div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n    <br>\r\n    </div>\r\n        \r\n    <mdb-card>\r\n      <mdb-card-body>\r\n        <mdb-card-title>\r\n          <h5>REPORTE GRAMATICAL</h5>\r\n        </mdb-card-title>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 mb-3 mb-md-0\">\r\n            <mdb-card-title>\r\n              <h5>XML</h5>\r\n            </mdb-card-title>\r\n            <ngx-codemirror\r\n            [(ngModel)]=\"reporteGramatical\"\r\n            [options]=\"{\r\n            lineNumbers: true,\r\n            theme: 'material',\r\n            mode: 'markdown'\r\n            }\"\r\n          ></ngx-codemirror>\r\n          </div>\r\n          <div class=\"col-sm-6\">\r\n            <mdb-card-title>\r\n              <h5>XPATH</h5>\r\n            </mdb-card-title>\r\n            <ngx-codemirror\r\n            [(ngModel)]=\"xpathRG\"\r\n            [options]=\"{\r\n            lineNumbers: true,\r\n            theme: 'material',\r\n            mode: 'markdown'\r\n            }\"\r\n          ></ngx-codemirror>\r\n          </div>\r\n        </div>\r\n      </mdb-card-body>\r\n    </mdb-card>\r\n\r\n    \r\n<script type=\"text/javascript\"></script>","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  \r\n  entradaxpath : string  = \"\";\r\n  consola : string = \"\";\r\n  entradaxml:string=\"\";\r\n  htmlts: string =\"\";\r\n  htmlerrores: string =\"\";\r\n  reporteGramatical: string = \"\";\r\n  xpathRG: string = \"\";\r\n\r\n\r\n  recorrer(): void{\r\n    \r\n  }\r\n\r\n  ejecutar():void {\r\n   \r\n    \r\n  }\r\n  imprimirTabla() {\r\n    \r\n    \r\n    \r\n      \r\n  }\r\n\r\n  openPage(pageName,valor) {\r\n    \r\n  }\r\n\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CodemirrorModule } from '@ctrl/ngx-codemirror';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    FormsModule,\r\n    CodemirrorModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/markdown/markdown';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}